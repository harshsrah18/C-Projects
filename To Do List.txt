#include <iostream>
#include <vector>
#include <string>

using namespace std;

// Task structure to store task information
struct Task {
    string name;
    string dueDate; // In the format "DD/MM/YYYY"
};

// Function to add a task
void addTask(vector<Task>& todoList) {
    Task newTask;
    cout << "Enter task name: ";
    cin.ignore(); // To clear the input buffer
    getline(cin, newTask.name);

    cout << "Enter task due date (DD/MM/YYYY): ";
    getline(cin, newTask.dueDate);

    todoList.push_back(newTask); // Add the task to the vector
    cout << "Task added successfully!\n";
}

// Function to remove a task by index
void removeTask(vector<Task>& todoList) {
    int taskIndex;
    cout << "Enter the task index to remove (1 to " << todoList.size() << "): ";
    cin >> taskIndex;

    if (taskIndex < 1 || taskIndex > todoList.size()) {
        cout << "Invalid task index.\n";
    } else {
        todoList.erase(todoList.begin() + taskIndex - 1); // Remove the task at the specified index
        cout << "Task removed successfully!\n";
    }
}

// Function to view all tasks
void viewTasks(const vector<Task>& todoList) {
    if (todoList.empty()) {
        cout << "No tasks to display.\n";
    } else {
        cout << "Your To-Do List:\n";
        for (size_t i = 0; i < todoList.size(); i++) {
            cout << i + 1 << ". " << todoList[i].name << " - Due Date: " << todoList[i].dueDate << endl;
        }
    }
}

int main() {
    vector<Task> todoList;
    int choice;

    while (true) {
        cout << "\nTo-Do List Menu\n";
        cout << "1. Add Task\n";
        cout << "2. Remove Task\n";
        cout << "3. View Tasks\n";
        cout << "4. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                addTask(todoList);
                break;
            case 2:
                removeTask(todoList);
                break;
            case 3:
                viewTasks(todoList);
                break;
            case 4:
                cout << "Exiting program.\n";
                return 0;
            default:
                cout << "Invalid choice. Please try again.\n";
        }
    }

    return 0;
}
